<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KeyKernel&#39;s Blog</title>
  
  <subtitle>慕容医仙</subtitle>
  <link href="http://keykernel.org/atom.xml" rel="self"/>
  
  <link href="http://keykernel.org/"/>
  <updated>2021-07-17T14:56:15.000Z</updated>
  <id>http://keykernel.org/</id>
  
  <author>
    <name>KeyKernel</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2021 年阅读书单</title>
    <link href="http://keykernel.org/2021/07/17/2021-reader/"/>
    <id>http://keykernel.org/2021/07/17/2021-reader/</id>
    <published>2021-07-17T09:08:03.000Z</published>
    <updated>2021-07-17T14:56:15.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h4><table><thead><tr><th align="center">书名</th><th align="center">进度</th><th align="center">链接</th></tr></thead><tbody><tr><td align="center">《黑天鹅》</td><td align="center">进度 12%</td><td align="center"><a href="https://item.jd.com/1033414877.html">https://item.jd.com/1033414877.html</a></td></tr><tr><td align="center">《少有人走的路》</td><td align="center">进度 3%</td><td align="center"><a href="https://item.jd.com/10023994928167.html">https://item.jd.com/10023994928167.html</a></td></tr></tbody></table><span id="more"></span><h4 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h4>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;书单&quot;&gt;&lt;a href=&quot;#书单&quot; class=&quot;headerlink&quot; title=&quot;书单&quot;&gt;&lt;/a&gt;书单&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;书名&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;进度&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;《黑天鹅》&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;进度 12%&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://item.jd.com/1033414877.html&quot;&gt;https://item.jd.com/1033414877.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;《少有人走的路》&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;进度 3%&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://item.jd.com/10023994928167.html&quot;&gt;https://item.jd.com/10023994928167.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    
    <category term="book" scheme="http://keykernel.org/tags/book/"/>
    
  </entry>
  
  <entry>
    <title>利用github分支同步博客代码，方便不同机器上更新博客</title>
    <link href="http://keykernel.org/2018/05/13/hexo-blog-sync-git-branch/"/>
    <id>http://keykernel.org/2018/05/13/hexo-blog-sync-git-branch/</id>
    <published>2018-05-13T06:51:29.000Z</published>
    <updated>2021-07-18T02:47:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用github搭建博客后，每次更新需要在原来的代码基础上更新。如果在其他个人电脑上，没有原来的代码，则无法立即同步更新博客。这时候我们可以选择将代码push到一些代码服务器上，但是我们这里可以这么做。<span id="more"></span><br>首先，我们先对github中博客的代码仓库建立一个新的分支hexo_code，并设置代码库的Branches-&gt;Default branches为新建的分支hexo_code。<br>克隆代码库到本地:  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> git@github.com:Users/page.github.com.git<br><span class="hljs-built_in">cd</span> page.github.com.git<br></code></pre></td></tr></table></figure><p>将博客代码全部拷贝到page.github.com.git目录, 如果themes不是使用的默认的theme。则需要删除掉该主题目录中的.git目录。<br>这时我们就可以把当前目录全部推送到github的新branches了。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit -m <span class="hljs-string">&#x27;new&#x27;</span><br>git push origin hexo_code<br></code></pre></td></tr></table></figure><p>这样我们在其他的电脑上，只需要clone代码(记得添加ssh key)，并在目录中执行npm install。之后就能按照正常的操作更新博客了。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> git@github.com:Users/page.github.com.git<br><span class="hljs-built_in">cd</span> page.github.com.git<br>npm install //在其他机器上执行  <br><br>//更新博客  <br>hexo new <span class="hljs-string">&#x27;test&#x27;</span> //新建文章  <br>hexo g          //生成页面代码  <br>hexo d          //部署页面  <br><br>//同步博客代码到git  <br>git add <span class="hljs-built_in">source</span>/_posts/test.md<br>git commit -m <span class="hljs-string">&quot;new up test&quot;</span><br>git push origin hexo_code<br></code></pre></td></tr></table></figure><p>done.  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用github搭建博客后，每次更新需要在原来的代码基础上更新。如果在其他个人电脑上，没有原来的代码，则无法立即同步更新博客。这时候我们可以选择将代码push到一些代码服务器上，但是我们这里可以这么做。</summary>
    
    
    
    
    <category term="hexo" scheme="http://keykernel.org/tags/hexo/"/>
    
    <category term="github" scheme="http://keykernel.org/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>使用user账号登录docker容器</title>
    <link href="http://keykernel.org/2018/05/13/docker-run-in-user/"/>
    <id>http://keykernel.org/2018/05/13/docker-run-in-user/</id>
    <published>2018-05-13T05:30:49.000Z</published>
    <updated>2021-07-18T02:47:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>平时工作中，使用docker容器时，均使用的root账号登录。但是有时候，你需要使用其他的账号，部署一些需要权限限制的服务，例如nginx。<span id="more"></span><br>使用下列步骤即可完成使用普通用户登录docker。<br>第一步，启动你的容器并以root进入，创建一个work账号：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">useradd -d /home/work work<br></code></pre></td></tr></table></figure><p>第二步，为用户设置登录密码：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@<span class="hljs-built_in">test</span>]&gt; passwd work<br>Changing password <span class="hljs-keyword">for</span> user work.<br>New UNIX password:<br>Retype new UNIX password:<br>passwd:all authentication takens updated successfully.<br></code></pre></td></tr></table></figure><p>第三步，设置用户主目录，由于之前使用的root创建的/home/work，这时候登录会有问题。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">//如果没创建则创建<br>//mkdir -p /home/work<br>chown work:work /home/work //设置目录拥有者和组<br>//如果该目录有子目录<br>//chown -R work:work /home/work<br></code></pre></td></tr></table></figure><p>这时候就可以使用work账号进行登录。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">//退出容器进入宿主机执行<br>docker <span class="hljs-built_in">exec</span> -it --user=work <span class="hljs-built_in">test</span> bash<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;平时工作中，使用docker容器时，均使用的root账号登录。但是有时候，你需要使用其他的账号，部署一些需要权限限制的服务，例如nginx。</summary>
    
    
    
    
    <category term="Docker" scheme="http://keykernel.org/tags/Docker/"/>
    
  </entry>
  
</feed>
